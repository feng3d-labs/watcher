{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * 观察装饰器，观察被装饰属性的变化\n *\n * @param onChange 属性变化回调  例如参数为“onChange”时，回调将会调用this.onChange(property, oldValue, newValue)\n *\n * 使用@watch后会自动生成一个带\"_\"的属性，例如 属性\"a\"会生成\"_a\"\n *\n * 通过使用 eval 函数 生成出 与自己手动写的set get 一样的函数，性能已经接近 手动写的get set函数。\n *\n * 性能比Watcher.watch更加高效，但还是建议使用 Watcher.watch 替代 @watch ，由于 @watch 没有对onChange更好的约束 使用 时容易出现运行时报错。\n */\nexport function watch(onChange: string)\n{\n    return (target: any, property: string) =>\n    {\n        const key = `_${property}`;\n\n        console.assert(target[onChange], `在对象 ${target} 上找不到方法 ${onChange}`);\n\n        Object.defineProperty(target, property, {\n            get() { return this[key]; },\n            set(value)\n            {\n                if (this[key] === value)\n                {\n                    return;\n                }\n                const oldValue = this[key];\n\n                this[key] = value;\n                this[onChange](property, oldValue, value);\n            },\n            enumerable: true,\n            configurable: true,\n        });\n    };\n}\n\nexport class Watcher\n{\n    /**\n     * 监听对象属性的变化\n     *\n     * 注意：使用watch后获取该属性值的性能将会是原来的1/60，避免在运算密集处使用该函数。\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性\n     * @param handler 变化回调函数 (object: T, property: string, oldValue: V) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    watch<T, K extends PropertyNames<T>, V extends T[K]>(object: T, property: K, handler: (newValue: V, oldValue: V, object: T, property: string) => void, thisObject?: any)\n    {\n        if (!Object.getOwnPropertyDescriptor(object, __watchs__))\n        {\n            Object.defineProperty(object, __watchs__, {\n                value: {},\n                enumerable: false,\n                configurable: true,\n                writable: false,\n            });\n        }\n        const _property: string = property as any;\n        const watchs: Watchs = object[__watchs__];\n\n        if (!watchs[_property])\n        {\n            const oldPropertyDescriptor = Object.getOwnPropertyDescriptor(object, _property);\n\n            watchs[_property] = { value: object[_property], oldPropertyDescriptor, handlers: [] };\n            //\n            let data = getPropertyDescriptor(object, _property);\n\n            if (data && data.set && data.get)\n            {\n                data = { enumerable: data.enumerable, configurable: true, get: data.get, set: data.set };\n                const orgSet = data.set;\n\n                data.set = function (value)\n                {\n                    const oldValue = this[_property];\n\n                    if (oldValue !== value)\n                    {\n                        orgSet && orgSet.call(this, value);\n                        notifyListener(value, oldValue, this, _property);\n                    }\n                };\n            }\n            else if (!data || (!data.get && !data.set))\n            {\n                data = { enumerable: true, configurable: true };\n                data.get = function ()\n                {\n                    return this[__watchs__][_property].value;\n                };\n                data.set = function (value)\n                {\n                    const oldValue = this[__watchs__][_property].value;\n\n                    if (oldValue !== value)\n                    {\n                        this[__watchs__][_property].value = value;\n                        notifyListener(value, oldValue, this, _property);\n                    }\n                };\n            }\n            else\n            {\n                console.warn(`watch ${object} . ${_property} 失败！`);\n\n                return;\n            }\n            Object.defineProperty(object, _property, data);\n        }\n\n        const propertywatchs = watchs[_property];\n        const has = propertywatchs.handlers.reduce((v, item) => v || (item.handler === handler && item.thisObject === thisObject), false);\n\n        if (!has)\n        {\n            propertywatchs.handlers.push({ handler, thisObject });\n        }\n    }\n\n    /**\n     * 取消监听对象属性的变化\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性\n     * @param handler 变化回调函数 (object: T, property: string, oldValue: V) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    unwatch<T, K extends PropertyNames<T>, V extends T[K]>(object: T, property: K, handler?: (newValue: V, oldValue: V, object: T, property: string) => void, thisObject?: any)\n    {\n        const watchs: Watchs = object[__watchs__];\n\n        if (!watchs) return;\n        const _property: string = property as any;\n\n        if (watchs[_property])\n        {\n            const handlers = watchs[_property].handlers;\n\n            if (handler === undefined)\n            {\n                handlers.length = 0;\n            }\n            for (let i = handlers.length - 1; i >= 0; i--)\n            {\n                if (handlers[i].handler === handler && (handlers[i].thisObject === thisObject || thisObject === undefined))\n                {\n                    handlers.splice(i, 1);\n                }\n            }\n            if (handlers.length === 0)\n            {\n                const value = object[_property];\n\n                delete object[_property];\n                if (watchs[_property].oldPropertyDescriptor)\n                {\n                    Object.defineProperty(object, _property, watchs[_property].oldPropertyDescriptor);\n                }\n                object[_property] = value;\n                delete watchs[_property];\n            }\n            if (Object.keys(watchs).length === 0)\n            {\n                delete object[__watchs__];\n            }\n        }\n    }\n\n    private _binds: [any, string, () => void, any, string, () => void][] = [];\n\n    /**\n     * 绑定两个对象的指定属性，保存两个属性值同步。\n     *\n     * @param object0 第一个对象。\n     * @param property0 第一个对象的属性名称。\n     * @param object1 第二个对象。\n     * @param property1 第二个对象的属性名称。\n     */\n    bind<T0, T1, K0 extends PropertyNames<T0>, K1 extends PropertyNames<T1>>(object0: T0, property0: K0, object1: T1, property1: K1)\n    {\n        const fun0 = () =>\n        {\n            object1[property1] = object0[property0] as any;\n        };\n        const fun1 = () =>\n        {\n            object0[property0] = object1[property1] as any;\n        };\n\n        this.watch(object0, property0, fun0);\n        this.watch(object1, property1, fun1);\n\n        this._binds.push([object0, property0 as any, fun0, object1, property1 as any, fun1]);\n    }\n\n    /**\n     * 解除两个对象的指定属性的绑定。\n     *\n     * @param object0 第一个对象。\n     * @param property0 第一个对象的属性名称。\n     * @param object1 第二个对象。\n     * @param property1 第二个对象的属性名称。\n     */\n    unbind<T0, T1, K0 extends PropertyNames<T0>, K1 extends PropertyNames<T1>>(object0: T0, property0: K0, object1: T1, property1: K1)\n    {\n        const binds = this._binds;\n\n        for (let i = binds.length - 1; i >= 0; i--)\n        {\n            const v = binds[i];\n\n            if ((v[1] === property0 && v[4] === property1) || (v[1] === property1 && v[4] === property0))\n            {\n                if ((v[0] === object0 && v[3] === object1) || (v[0] === object1 && v[3] === object0))\n                {\n                    this.unwatch(v[0], v[1], v[2]);\n                    this.unwatch(v[3], v[4], v[5]);\n                    binds.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 监听对象属性链值变化\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性 例如：\"a.b\"\n     * @param handler 变化回调函数 (newValue: any, oldValue: any, object: any, property: string) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    watchchain(object: any, property: string, handler: (newValue: any, oldValue: any, object: any, property: string) => void, thisObject?: any)\n    {\n        const notIndex = property.indexOf('.');\n\n        if (notIndex === -1)\n        {\n            this.watch(object, property, handler, thisObject);\n\n            return;\n        }\n        if (!Object.getOwnPropertyDescriptor(object, __watchchains__))\n        {\n            Object.defineProperty(object, __watchchains__, { value: {}, enumerable: false, writable: false, configurable: true });\n        }\n        const watchchains: WatchChains = object[__watchchains__];\n\n        if (!watchchains[property])\n        {\n            watchchains[property] = [];\n        }\n\n        const propertywatchs = watchchains[property];\n        const has = propertywatchs.reduce((v, item) => v || (item.handler === handler && item.thisObject === thisObject), false);\n\n        if (!has)\n        {\n            // 添加下级监听链\n            const currentp = property.substr(0, notIndex);\n            const nextp = property.substr(notIndex + 1);\n\n            if (object[currentp])\n            {\n                this.watchchain(object[currentp], nextp, handler, thisObject);\n            }\n\n            // 添加链监听\n            const watchchainFun = (newValue: any, oldValue: any) =>\n            {\n                if (oldValue) this.unwatchchain(oldValue, nextp, handler, thisObject);\n                if (newValue) this.watchchain(newValue, nextp, handler, thisObject);\n                // 当更换对象且监听值发生改变时触发处理函数\n                const ov = getObjectPropertyValue(oldValue, nextp);\n                const nv = getObjectPropertyValue(newValue, nextp);\n\n                if (ov !== nv)\n                {\n                    handler.call(thisObject, nv, ov, newValue, nextp);\n                }\n            };\n\n            this.watch(object, currentp, watchchainFun);\n\n            // 记录链监听函数\n            propertywatchs.push({ handler, thisObject, watchchainFun });\n        }\n    }\n\n    /**\n     * 取消监听对象属性链值变化\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性 例如：\"a.b\"\n     * @param handler 变化回调函数 (object: T, property: string, oldValue: V) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    unwatchchain(object: any, property: string, handler?: (newValue: any, oldValue: any, object: any, property: string) => void, thisObject?: any)\n    {\n        const notIndex = property.indexOf('.');\n\n        if (notIndex === -1)\n        {\n            this.unwatch(object, property, handler, thisObject);\n\n            return;\n        }\n\n        const currentp = property.substr(0, notIndex);\n        const nextp = property.substr(notIndex + 1);\n\n        //\n        const watchchains: WatchChains = object[__watchchains__];\n\n        if (!watchchains || !watchchains[property]) return;\n\n        //\n        const propertywatchs = watchchains[property];\n\n        for (let i = propertywatchs.length - 1; i >= 0; i--)\n        {\n            const element = propertywatchs[i];\n\n            if (objectIsEmpty(handler) || (handler === element.handler && thisObject === element.thisObject))\n            {\n                // 删除下级监听链\n                if (object[currentp])\n                {\n                    this.unwatchchain(object[currentp], nextp, element.handler, element.thisObject);\n                }\n                // 删除链监听\n                this.unwatch(object, currentp, element.watchchainFun);\n                // 清理记录链监听函数\n                propertywatchs.splice(i, 1);\n            }\n        }\n        // 清理空列表\n        if (propertywatchs.length === 0) delete watchchains[property];\n        if (Object.keys(watchchains).length === 0)\n        {\n            delete object[__watchchains__];\n        }\n    }\n\n    /**\n     * 监听对象属性链值变化\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性 例如：{a:{b:null,d:null}} 表示监听 object.a.b 与 object.a.d 值得变化，如果property===object时表示监听对象中所有叶子属性变化。\n     * @param handler 变化回调函数 (object: T, property: string, oldValue: V) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    watchobject<T>(object: T, property: gPartial<T>, handler: (object: any, property: string, oldValue: any) => void, thisObject?: any)\n    {\n        const chains = getObjectPropertyChains(object);\n\n        chains.forEach((v) =>\n        {\n            this.watchchain(object, v, handler, thisObject);\n        });\n    }\n\n    /**\n     * 取消监听对象属性链值变化\n     *\n     * @param object 被监听对象\n     * @param property 被监听属性 例如：{a:{b:null,d:null}} 表示监听 object.a.b 与 object.a.d 值得变化，如果property===object时表示监听对象中所有叶子属性变化。\n     * @param handler 变化回调函数 (object: T, property: string, oldValue: V) => void\n     * @param thisObject 变化回调函数 this值\n     */\n    unwatchobject<T>(object: T, property: gPartial<T>, handler?: (object: any, property: string, oldValue: any) => void, thisObject?: any)\n    {\n        const chains = getObjectPropertyChains(property);\n\n        chains.forEach((v) =>\n        {\n            this.unwatchchain(object, v, handler, thisObject);\n        });\n    }\n}\n\nexport const watcher = new Watcher();\n\ninterface Watchs\n{\n    [property: string]: { value: any, oldPropertyDescriptor: any, handlers: { handler: (newValue: any, oldValue: any, host: any, property: string) => void, thisObject: any }[] };\n}\n\ninterface WatchChains\n{\n    [property: string]: { handler: (newValue: any, oldValue: any, host: any, property: string) => void, thisObject: any, watchchainFun: (newValue: any, oldValue: any, host: any, property: string) => void }[];\n}\n\nexport const __watchs__ = '__watchs__';\nexport const __watchchains__ = '__watchchains__';\n\nfunction notifyListener(newValue: any, oldValue: any, host: any, property: string): void\n{\n    const watchs: Watchs = host[__watchs__];\n    const handlers = watchs[property].handlers;\n\n    handlers.forEach((element) =>\n    {\n        element.handler.call(element.thisObject, newValue, oldValue, host, property);\n    });\n}\n\n/**\n * 让T中以及所有键值中的所有键都是可选的\n */\ntype gPartial<T> = {\n    [P in keyof T]?: gPartial<T[P]>;\n};\n\n/**\n * 从对象自身或者对象的原型中获取属性描述\n *\n * @param object 对象\n * @param property 属性名称\n */\nfunction getPropertyDescriptor(object: Object, property: string): PropertyDescriptor | undefined\n{\n    const data = Object.getOwnPropertyDescriptor(object, property);\n    if (data)\n    {\n        return data;\n    }\n    const prototype = Object.getPrototypeOf(object);\n    if (prototype)\n    {\n        return getPropertyDescriptor(prototype, property);\n    }\n\n    return undefined;\n}\n\n/**\n * 判断对象是否为null或者undefine\n *\n * @param obj\n * @returns\n */\nfunction objectIsEmpty(obj: any)\n{\n    if (obj === undefined || obj === null)\n    { return true; }\n\n    return false;\n}\n\n/**\n * 选取T类型中值为非函数类型的所有键\n */\ntype PropertyNames<T> = NonTypePropertyNames<T, Function>;\n\n/**\n * 获取T类型中除值为KT类型以外的所有键\n *\n * ```\n * class A\n * {\n *      a = 1;\n *      f(){}\n * }\n *\n * var a: NonTypePropertyNames<A, number>; //var a:\"f\"\n * var a1: NonTypePropertyNames<A, Function>; //var a:\"a\"\n *\n * ```\n */\ntype NonTypePropertyNames<T, KT> = { [K in keyof T]: T[K] extends KT ? never : K }[keyof T];\n\n/**\n * 获取对象对应属性上的值\n *\n * @param object 对象\n * @param property 属性名称，可以是 \"a\" 或者 \"a.b\" 或者 [\"a\",\"b\"]\n */\nfunction getObjectPropertyValue(object: Object, property: string | string[])\n{\n    if (typeof property === 'string') property = property.split('.');\n    let value = object;\n    for (let i = 0; i < property.length; i++)\n    {\n        if (objectIsEmpty(value)) return undefined;\n        value = value[property[i]];\n    }\n\n    return value;\n}\n\n/**\n * 获取对象上属性链列表\n *\n * 例如 object值为{ a: { b: { c: 1 }, d: 2 } }时则返回 [\"a.b.c\",\"a.d\"]\n *\n * @param object 对象\n */\nfunction getObjectPropertyChains(object: Object): string[]\n{\n    const result: string[] = [];\n    // 属性名称列表\n    const propertys = Object.keys(object);\n    // 属性所属对象列表\n    const hosts = new Array(propertys.length).fill(object);\n    // 父属性所在编号列表\n    const parentPropertyIndices = new Array(propertys.length).fill(-1);\n    // 处理到的位置\n    let index = 0;\n    while (index < propertys.length)\n    {\n        const host = hosts[index];\n        const cp = propertys[index];\n        const cv = host[cp];\n        let vks: string[];\n        if (objectIsEmpty(cv) || isBaseType(cv) || (vks = Object.keys(cv)).length === 0)\n        {\n            // 处理叶子属性\n            const ps = [cp];\n            let ci = index;\n            // 查找并组合属性链\n            while ((ci = parentPropertyIndices[ci]) !== -1)\n            {\n                ps.push(propertys[ci]);\n            }\n            ps.reverse();\n            result.push(ps.join('.'));\n        }\n        else\n        {\n            // 处理中间属性\n            // eslint-disable-next-line no-loop-func\n            vks.forEach((k) =>\n            {\n                propertys.push(k);\n                hosts.push(cv);\n                parentPropertyIndices.push(index);\n            });\n        }\n\n        index++;\n    }\n\n    return result;\n}\n\n/**\n * 判断是否为基础类型 undefined,null,boolean,string,number\n */\nfunction isBaseType(object: any): boolean\n{\n    // 基础类型\n    if (\n        object === undefined || object === null\n        || typeof object === 'boolean'\n        || typeof object === 'string'\n        || typeof object === 'number'\n    )\n    { return true; }\n\n    return false;\n}\n"],"names":[],"mappings":"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"}